/// <reference types="jquery" />
/// <reference types="pickadate" />
/// <reference types="materialize-css" />
import 'rxjs/add/observable/fromEvent';
import 'rxjs/add/operator/debounceTime';
import 'rxjs/add/operator/filter';
import { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy, OnInit, Renderer } from '@angular/core';
import { HandlePropChanges } from '../shared/handle-prop-changes';
export declare class MzSelectDirective extends HandlePropChanges implements AfterViewInit, OnInit, OnDestroy {
    private elementRef;
    private renderer;
    private changeDetectorRef;
    id: string;
    disabled: boolean;
    placeholder: string;
    label: string;
    filledIn: boolean;
    labelElement: JQuery;
    selectElement: JQuery;
    selectContainerElement: JQuery;
    checkboxElements: JQuery;
    suspend: boolean;
    lastOptions: Element[];
    constructor(elementRef: ElementRef, renderer: Renderer, changeDetectorRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    initHandlers(): void;
    initElements(): void;
    initFilledIn(): void;
    /**
     * Force NgModel value(s) to be selected correctly on multiple select as NgModel
     * is not supported yet by Angular 2 on multiple select and cause selected values
     * to be out of sync when changing values in Materialize select
     */
    initMultiple(): void;
    /**
     * Trigger the native change event from select element instead of the JQuery.
     * An issue on Github is open about this problem : https://github.com/Dogfalo/materialize/issues/2843
     * This method should be removed when this issue is revolved.
     */
    initOnChange(): void;
    createLabelElement(): JQuery;
    handleProperties(): void;
    selectFirstOption(): void;
    handleDisabled(): void;
    handleLabel(): void;
    handleFilledIn(): void;
    handlePlaceholder(): void;
    listenOptionChanges(): void;
}
